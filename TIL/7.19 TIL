### 오늘 한일
 - 회원가입 및 로그인 구현
 - 워크스페이스의 채널 및 DM 데이터 받아오고 보내서 저장하는 부분 리덕스로 구현 해놓음
 - 소켓 관련해서 좀더 공부
 
#### 리액트 컴포넌트 데이터 전달
리액트를 지금까지 하면서 거의 대부분 상위 컴포넌트에서 하위 컴포넌트로 데이터를 전달하는 방식으로 구현을 해왔는데 그래서
인풋 박스나 채팅리스트를 불러오는 중단위 혹은 소단위 컴포넌트들을 재사용 하기가 굉장히 어려웠었다. 그래서 오늘 하위 컴포넌트에서 상위 컴포넌트로 함수를 보내서 상위 컴포넌트에서
함수를 실행시키는 방식으로 코드를 구현 해봤는데 이런 방식이 컴포넌트들을 재사용할때 굉장히 유용한거 같다.
~~~javascript
  <InputText
    onChange={props.onChangeChat}
    value={props.chat}
    placeholder={props.placeholder}
  ></InputText>
  ....
  <SendButton onClick={props.onSubmitForm}>
~~~
이런식으로 함수를 보내고 바로 상위 컴포넌트에서 
~~~javascript
<ChatList chatData={dm_list}></ChatList>
        <ChatBox
          onSubmitForm={onSubmitForm}
          chat={chat}
          onChangeChat={onChangeChat}
          placeholder={placeholder}
        ></ChatBox>
~~~
이렇게 받아와서 이 함수들을 선언하고 실행하는 방식으로 실행을 한다. 이런식으로 짜게되면 이런 하위 컴포넌트들을 여러 상위 컴포넌트에서 재사용 할수 있는 것이다.

#### useEffect
렌더링 될때마다 특정 작업을 수행하기 위한 함수로 알고 쓰고 있었는데 정확한 방법을 몰라서 오늘 꽤 오랜 시간 고생을 했다.
~~~javascript
  useEffect(() => {
    dispatch(getAllDM());
  });
~~~
위처럼 함수를 썼었는데 렌더링되고 다른 줄의 onchange함수가 실행될때마다 계속 dispatch가 되서 왜그런지 한참 찾았는데
~~~javascript
  useEffect(() => {
    dispatch(getAllDM());
  }, []);
~~~
이렇게 바꿔주고 나서 해결이 되었다. 뒤에 배열값을 주고 안에 든 값들이 변경될때마다 안의 함수를 실행하는 것이 useEffect인데 값이 없으니 그냥 계속
실행이 된 것이다. 이것말고도 다른 리액트 훅에 관한 것들도 정확히 알고 쓸 필요가 있을거같다.
